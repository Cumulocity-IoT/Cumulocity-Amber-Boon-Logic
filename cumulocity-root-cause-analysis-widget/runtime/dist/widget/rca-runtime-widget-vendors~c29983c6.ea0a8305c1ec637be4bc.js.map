{"version":3,"sources":["webpack:///ng://ngx-bootstrap/positioning/utils/getStyleComputedProperty.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getParentNode.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getScrollParent.ts","webpack:///ng://ngx-bootstrap/positioning/utils/isBrowser.ts","webpack:///ng://ngx-bootstrap/positioning/utils/isIE.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getOffsetParent.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getRoot.ts","webpack:///ng://ngx-bootstrap/positioning/utils/findCommonOffsetParent.ts","webpack:///ng://ngx-bootstrap/positioning/utils/isOffsetContainer.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getBordersSize.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getWindowSizes.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getScroll.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getClientRect.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getBoundingClientRect.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getOffsetRectRelativeToArbitraryNode.ts","webpack:///ng://ngx-bootstrap/positioning/utils/includeScroll.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getFixedPositionOffsetParent.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getBoundaries.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getViewportOffsetRectRelativeToArtbitraryNode.ts","webpack:///ng://ngx-bootstrap/positioning/utils/isFixed.ts","webpack:///ng://ngx-bootstrap/positioning/utils/computeAutoPlacement.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getOuterSizes.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getReferenceOffsets.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getTargetOffsets.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getOppositePlacement.ts","webpack:///ng://ngx-bootstrap/positioning/utils/isModifierEnabled.ts","webpack:///ng://ngx-bootstrap/positioning/utils/setStyles.ts","webpack:///ng://ngx-bootstrap/positioning/utils/isNumeric.ts","webpack:///ng://ngx-bootstrap/positioning/modifiers/arrow.ts","webpack:///ng://ngx-bootstrap/positioning/modifiers/flip.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getOppositeVariation.ts","webpack:///ng://ngx-bootstrap/positioning/modifiers/preventOverflow.ts","webpack:///ng://ngx-bootstrap/positioning/modifiers/shift.ts","webpack:///ng://ngx-bootstrap/positioning/ng-positioning.ts","webpack:///ng://ngx-bootstrap/positioning/modifiers/initData.ts","webpack:///ng://ngx-bootstrap/positioning/utils/getOffsets.ts","webpack:///ng://ngx-bootstrap/positioning/utils/updateContainerClass.ts","webpack:///ng://ngx-bootstrap/positioning/positioning.service.ts"],"names":["getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","document","body","overflow","overflowX","overflowY","test","String","isBrowser","window","isIE11","MSInputMethodContext","documentMode","isIE10","userAgent","isIE","version","getOffsetParent","documentElement","sibling","noOffsetParent","offsetParent","nextElementSibling","indexOf","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","element1root","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","html","computedStyle","Math","max","parseInt","getWindowSizes","height","width","getScroll","side","upperSide","scrollingElement","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","target","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","Number","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","computeAutoPlacement","placement","refRect","allowedPositions","rects","sortedAreas","Object","keys","map","key","area","sort","a","b","filteredAreas","filter","computedPlacement","position","some","allowedPosition","length","variation","split","className","replace","getOuterSizes","x","marginBottom","y","marginRight","getReferenceOffsets","getTargetOffsets","hostOffsets","targetRect","targetOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","hash","matched","getOppositePlacement","isModifierEnabled","options","modifierName","modifiers","enabled","setStyles","renderer","forEach","prop","n","unit","isNaN","isFinite","setStyle","style","arrow","data","arrowElement","instance","querySelector","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","placementVariation","center","targetMarginSide","targetBorderSide","targetBorderRadius","borderRadius","targetSideArrowOffset","sideValue","min","round","flip","adaptivePosition","flipOrder","step","index","overlapsRef","floor","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","getOppositeVariation","preventOverflow","targetStyles","transform","check","primary","value","secondary","shift","basePlacement","shiftVariation","shiftOffsets","positionService","hostElement","targetElement","this","offset","positionElements","appendToBody","reduce","modifiedData","hostElPosition","match","placementAuto","matches","positionFixed","undefined","initData","getOffsets","containerClass","setAttribute","updateContainerClass","ngZone","rendererFactory","platformId","update$$","Map","isDisabled","runOutsideAngular","triggerEvent$","passive","subscribe","positionElement","_getHtmlElement","attachment","createRenderer","addPositionElement","disable","enable","set","calcPosition","next","deletePositionElement","elRef","delete","setOptions","nativeElement"],"mappings":"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","file":"rca-runtime-widget-vendors~c29983c6.ea0a8305c1ec637be4bc.js","sourcesContent":["/**\n * Get CSS computed property of the given element\n */\nexport function getStyleComputedProperty(element: HTMLElement, property?: string): any {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n\n  return property ? css[property as any] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n */\nexport function getParentNode(element: any): any {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n","/**\n * Returns the scrolling parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function getScrollParent(element: any): any {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n    default:\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n","/**\n * Determines if the browser is Internet Explorer\n */\nimport { isBrowser } from './isBrowser';\n\nconst isIE11 = isBrowser && !!((window as any).MSInputMethodContext && (document as any).documentMode);\nconst isIE10 = isBrowser && !!((window as any).MSInputMethodContext && /MSIE 10/.test((navigator as any).userAgent));\n\nexport function isIE(version?: number) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n","/**\n * Returns the offset parent of the given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getOffsetParent(element: any): any {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n\n  // Skip hidden elements which don't have an offsetParent\n  let sibling: HTMLElement | null;\n\n  while (offsetParent === noOffsetParent\n         && element.nextElementSibling\n         && sibling !== element.nextElementSibling) {\n\n      sibling = element.nextElementSibling;\n      offsetParent = sibling.offsetParent;\n    }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n */\nexport function getRoot(node: Node): any {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Finds the offset parent common to the two provided nodes\n */\nimport { isOffsetContainer } from './isOffsetContainer';\nimport { getRoot } from './getRoot';\nimport { getOffsetParent } from './getOffsetParent';\n\nexport function findCommonOffsetParent(element1: HTMLElement, element2: HTMLElement): any {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  /* tslint:disable-next-line: no-bitwise */\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import { getOffsetParent } from './getOffsetParent';\n\nexport function isOffsetContainer(element: any) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Helper to detect borders of a given element\n */\n\nexport function getBordersSize(styles: CSSStyleDeclaration, axis: string) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width` as any]) +\n    parseFloat(styles[`border${sideB}Width` as any])\n  );\n}\n","import { isIE } from './isIE';\n\nfunction getSize(axis: string, body: HTMLElement, html: HTMLElement, computedStyle: CSSStyleDeclaration) {\n  return Math.max(\n    (body as any)[`offset${axis}`],\n    (body as any)[`scroll${axis}`],\n    (html as any)[`client${axis}`],\n    (html as any)[`offset${axis}`],\n    (html as any)[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt((html as any)[`offset${axis}`], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}` as any], 10) +\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}` as any], 10))\n    : 0\n  );\n}\n\nexport function getWindowSizes(document: Document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n */\nexport function getScroll(element: HTMLElement, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n */\nimport { Offsets } from '../models';\n\nexport function getClientRect(offsets: Offsets): Offsets {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  };\n}\n","/**\n * Get bounding client rect of given element\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getBordersSize } from './getBordersSize';\nimport { getWindowSizes } from './getWindowSizes';\nimport { getScroll } from './getScroll';\nimport { getClientRect } from './getClientRect';\nimport { isIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getBoundingClientRect(element: HTMLElement): Offsets {\n  let rect: any = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {\n    return undefined;\n  }\n\n  const result: any = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes: any = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import { getBoundingClientRect } from './getBoundingClientRect';\nimport { getClientRect } from './getClientRect';\nimport { getScrollParent } from './getScrollParent';\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { includeScroll } from './includeScroll';\nimport { isIE as runIsIE } from './isIE';\nimport { Offsets } from '../models';\n\nexport function getOffsetRectRelativeToArbitraryNode(\n  children: HTMLElement,\n  parent: HTMLElement,\n  fixedPosition = false\n): Offsets {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect: any = getBoundingClientRect(children);\n  const parentRect: any = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  let offsets: Offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","/**\n * Sum or subtract the element scroll values (left and top) from a given rect object\n */\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function includeScroll(rect: Offsets, element: HTMLElement, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n\n  return rect;\n}\n","/**\n * Finds the first parent of an element that has a transformed property defined\n */\n\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { isIE } from './isIE';\n\nexport function getFixedPositionOffsetParent(element: HTMLElement): HTMLElement {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n   return document.documentElement;\n  }\n\n  let el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n","/**\n * Computed the boundaries limits and return them\n */\nimport { getScrollParent } from './getScrollParent';\nimport { getParentNode } from './getParentNode';\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getViewportOffsetRectRelativeToArtbitraryNode } from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport { getWindowSizes } from './getWindowSizes';\nimport { isFixed } from './isFixed';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\n\nexport function getBoundaries(\n  target: HTMLElement,\n  host: HTMLElement,\n  padding = 0,\n  boundariesElement: string,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries: any = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(host));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = target.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = target.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(target.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = Number(height) + Number(offsets.top);\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = Number(width) + Number(offsets.left);\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import { getClientRect } from './getClientRect';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getScroll } from './getScroll';\nimport { Offsets } from '../models';\n\nexport function getViewportOffsetRectRelativeToArtbitraryNode(element: HTMLElement, excludeScroll = false): Offsets {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - Number(relativeOffset.top) + Number(relativeOffset.marginTop),\n    left: scrollLeft - Number(relativeOffset.left) + Number(relativeOffset.marginLeft),\n    width,\n    height\n  };\n\n  return getClientRect(offset);\n}\n","/**\n * Check if the given element is fixed or is inside a fixed parent\n */\nimport { getStyleComputedProperty } from './getStyleComputedProperty';\nimport { getParentNode } from './getParentNode';\n\nexport function isFixed(element: HTMLElement): boolean {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n","/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n */\nimport { getBoundaries } from './getBoundaries';\nimport { Offsets } from '../models';\n\nfunction getArea({ width, height }: { [key: string]: number }) {\n  return width * height;\n}\n\nexport function computeAutoPlacement(\n  placement: string,\n  refRect: Offsets,\n  target: HTMLElement,\n  host: HTMLElement,\n  allowedPositions: any[] = ['top', 'bottom', 'right', 'left'],\n  boundariesElement = 'viewport',\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(target, host, padding, boundariesElement);\n\n  const rects: any = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key])\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  let filteredAreas: any[] = sortedAreas.filter(\n    ({ width, height }) => {\n      return width >= target.clientWidth\n        && height >= target.clientHeight;\n    }\n  );\n\n  filteredAreas = filteredAreas.filter((position: any) => {\n    return allowedPositions\n      .some((allowedPosition: string) => {\n        return allowedPosition === position.key;\n      });\n  });\n\n  const computedPlacement: string = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split(' ')[1];\n\n  // for tooltip on auto position\n  target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${computedPlacement}`);\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n */\nexport function getOuterSizes(element: any) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n\n  return {\n    width: Number(element.offsetWidth) + y,\n    height: Number(element.offsetHeight) + x\n  };\n}\n","/**\n * Get offsets to the reference element\n */\nimport { findCommonOffsetParent } from './findCommonOffsetParent';\nimport { getOffsetRectRelativeToArbitraryNode } from './getOffsetRectRelativeToArbitraryNode';\nimport { getFixedPositionOffsetParent } from './getFixedPositionOffsetParent';\nimport { Offsets } from '../models';\n\nexport function getReferenceOffsets(\n  target: HTMLElement,\n  host: HTMLElement,\n  fixedPosition: boolean = null\n): Offsets {\n  const commonOffsetParent = fixedPosition\n    ? getFixedPositionOffsetParent(target)\n    : findCommonOffsetParent(target, host);\n\n  return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get offsets to the target\n */\nimport { getOppositePlacement } from './getOppositePlacement';\nimport { getOuterSizes } from './getOuterSizes';\nimport { Offsets } from '../models';\n\nexport function getTargetOffsets(\n  target: HTMLElement,\n  hostOffsets: Offsets,\n  position: string\n): Offsets {\n  const placement = position.split(' ')[0];\n\n  // Get target node sizes\n  const targetRect = getOuterSizes(target);\n\n  // Add position, width and height to our offsets object\n  const targetOffsets = {\n    width: targetRect.width,\n    height: targetRect.height\n  };\n\n  // depending by the target placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  (targetOffsets as any)[mainSide] =\n    hostOffsets[mainSide] +\n    hostOffsets[measurement] / 2 -\n    targetRect[measurement] / 2;\n\n  (targetOffsets as any)[secondarySide] = placement === secondarySide\n    ? hostOffsets[secondarySide] - targetRect[secondaryMeasurement]\n    : (hostOffsets as any)[getOppositePlacement(secondarySide)];\n\n  return targetOffsets;\n}\n","/**\n * Get the opposite placement of the given one\n */\nexport function getOppositePlacement(placement: string) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\n  return placement.replace(/left|right|bottom|top/g, matched => (hash as any)[matched]);\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n */\nexport function isModifierEnabled(options: any, modifierName: string) {\n  return options\n    && options.modifiers\n    && options.modifiers[modifierName]\n    && options.modifiers[modifierName].enabled;\n}\n","/**\n * Set the style to the given popper\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { isNumeric } from './isNumeric';\n\nexport function setStyles(element: HTMLElement, styles: any, renderer?: Renderer2) {\n  Object.keys(styles).forEach((prop: any) => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 &&\n      isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    if (renderer) {\n      renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n\n      return;\n    }\n\n    element.style[prop] = String(styles[prop]) + unit;\n  });\n}\n","/**\n * Tells if a given input is a number\n */\nexport function isNumeric(n: any) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import { getClientRect, getOuterSizes, getStyleComputedProperty } from '../utils';\nimport { Data } from '../models';\n\nexport function arrow(data: Data) {\n  let targetOffsets = data.offsets.target;\n  // if arrowElement is a string, suppose it's a CSS selector\n  const arrowElement: HTMLElement | null = data.instance.target.querySelector('.arrow');\n\n  // if arrowElement is not found, don't run the modifier\n  if (!arrowElement) {\n    return data;\n  }\n\n  const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n  const placementVariation = data.placement.split(' ')[1];\n\n  // top/left side\n  if (data.offsets.host[opSide] - arrowElementSize < (targetOffsets as any)[side]) {\n    (targetOffsets as any)[side] -=\n      (targetOffsets as any)[side] - (data.offsets.host[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (Number((data as any).offsets.host[side]) + Number(arrowElementSize) > (targetOffsets as any)[opSide]) {\n    (targetOffsets as any)[side] +=\n      Number((data as any).offsets.host[side]) + Number(arrowElementSize) - Number((targetOffsets as any)[opSide]);\n  }\n  targetOffsets = getClientRect(targetOffsets);\n\n  // Compute the sideValue using the updated target offsets\n  // take target margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.target);\n  const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n\n  // compute center of the target\n  let center: number;\n  if (!placementVariation) {\n    center = Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n  } else {\n    const targetBorderRadius = parseFloat(css.borderRadius);\n    const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n    center = side === placementVariation ?\n      Number((data as any).offsets.host[side]) + targetSideArrowOffset :\n      Number((data as any).offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n  }\n\n  let sideValue =\n    center - (targetOffsets as any)[side] - targetMarginSide - targetBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its target\n  sideValue = Math.max(Math.min(targetOffsets[len] - arrowElementSize, sideValue), 0);\n\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  data.instance.arrow = arrowElement;\n\n  return data;\n}\n","import {\n  computeAutoPlacement,\n  getBoundaries,\n  getClientRect,\n  getOppositeVariation,\n  getTargetOffsets,\n  isModifierEnabled\n} from '../utils';\n\nimport { Data } from '../models';\n\nexport function flip(data: Data): Data {\n  data.offsets.target = getClientRect(data.offsets.target);\n\n  if (!isModifierEnabled(data.options, 'flip')) {\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...getTargetOffsets(\n        data.instance.target,\n        data.offsets.host,\n        data.placement\n      )\n    };\n\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'viewport',\n    false // positionFixed\n  );\n\n  let placement = data.placement.split(' ')[0];\n  let variation = data.placement.split(' ')[1] || '';\n\n  const offsetsHost = data.offsets.host;\n  const target = data.instance.target;\n  const host = data.instance.host;\n\n  const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n  const flipOrder = [placement, adaptivePosition];\n\n  /* tslint:disable-next-line: cyclomatic-complexity */\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split(' ')[0];\n\n    // using floor because the host offsets may contain decimals we are not going to consider here\n    const overlapsRef =\n      (placement === 'left' &&\n        Math.floor(data.offsets.target.right) > Math.floor(data.offsets.host.left)) ||\n      (placement === 'right' &&\n        Math.floor(data.offsets.target.left) < Math.floor(data.offsets.host.right)) ||\n      (placement === 'top' &&\n        Math.floor(data.offsets.target.bottom) > Math.floor(data.offsets.host.top)) ||\n      (placement === 'bottom' &&\n        Math.floor(data.offsets.target.top) < Math.floor(data.offsets.host.bottom));\n\n    const overflowsLeft = Math.floor(data.offsets.target.left) < Math.floor(boundaries.left);\n    const overflowsRight = Math.floor(data.offsets.target.right) > Math.floor(boundaries.right);\n    const overflowsTop = Math.floor(data.offsets.target.top) < Math.floor(boundaries.top);\n    const overflowsBottom = Math.floor(data.offsets.target.bottom) > Math.floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      ((isVertical && variation === 'left' && overflowsLeft) ||\n        (isVertical && variation === 'right' && overflowsRight) ||\n        (!isVertical && variation === 'left' && overflowsTop) ||\n        (!isVertical && variation === 'right' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? ` ${variation}` : '');\n\n      data.offsets.target = {\n        ...data.offsets.target,\n        ...getTargetOffsets(\n          data.instance.target,\n          data.offsets.host,\n          data.placement\n        )\n      };\n    }\n  });\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n */\nexport function getOppositeVariation(variation: string) {\n  if (variation === 'right') {\n    return 'left';\n  } else if (variation === 'left') {\n    return 'right';\n  }\n\n  return variation;\n}\n","import { getBoundaries, isModifierEnabled } from '../utils';\nimport { Data } from '../models';\n\nexport function preventOverflow(data: Data) {\n\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  }\n\n  // NOTE: DOM access here\n  // resets the targetOffsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.target,\n    data.instance.host,\n    0, // padding\n    'scrollParent',\n    false // positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n\n  const order = ['left', 'right', 'top', 'bottom'];\n\n  const check = {\n    primary(placement: string) {\n      let value = (data as any).offsets.target[placement];\n      if (\n        (data as any).offsets.target[placement] < boundaries[placement] &&\n        !false // options.escapeWithReference\n      ) {\n        value = Math.max((data as any).offsets.target[placement], boundaries[placement]);\n      }\n\n      return { [placement]: value };\n    },\n    secondary(placement: string) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = data.offsets.target[mainSide];\n      if (\n        (data as any).offsets.target[placement] > boundaries[placement] &&\n        !false // escapeWithReference\n      ) {\n        value = Math.min(\n          data.offsets.target[mainSide],\n          boundaries[placement] -\n          (placement === 'right' ? data.offsets.target.width : data.offsets.target.height)\n        );\n      }\n\n      return { [mainSide]: value };\n    }\n  };\n\n  let side: string;\n\n  order.forEach(placement => {\n    side = ['left', 'top']\n      .indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n\n    data.offsets.target = {\n      ...data.offsets.target,\n      ...(check as any)[side](placement)\n    };\n\n  });\n\n  return data;\n}\n","import { Data } from '../models';\n\nexport function shift(data: Data): Data {\n  const placement = data.placement;\n  const basePlacement = placement.split(' ')[0];\n  const shiftVariation = placement.split(' ')[1];\n\n  if (shiftVariation) {\n    const { host, target } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: host[side] },\n      end: {\n        [side]: host[side] + host[measurement] - target[measurement]\n      }\n    };\n\n    data.offsets.target = {\n      ...target, ...{\n        [side]: (side === shiftVariation ? (shiftOffsets as any).start[side] : (shiftOffsets as any).end[side])\n      }\n    };\n  }\n\n  return data;\n}\n","/**\n * @copyright Valor Software\n * @copyright Federico Zivolo and contributors\n */\nimport { Renderer2 } from '@angular/core';\n\nimport { getOffsets, getReferenceOffsets, updateContainerClass, setStyles } from './utils';\n\nimport { arrow, flip, preventOverflow, shift, initData } from './modifiers';\nimport { Data, Offsets, Options } from './models';\n\n\nexport class Positioning {\n  position(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return this.offset(hostElement, targetElement, false);\n  }\n\n  offset(hostElement: HTMLElement, targetElement: HTMLElement, round = true): Offsets {\n    return getReferenceOffsets(targetElement, hostElement);\n  }\n\n  positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    position: string,\n    appendToBody?: boolean,\n    options?: Options\n  ): Data {\n    const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n\n    return chainOfModifiers.reduce(\n      (modifiedData, modifier) => modifier(modifiedData),\n      initData(targetElement, hostElement, position, options)\n    );\n  }\n}\n\nconst positionService = new Positioning();\n\nexport function positionElements(\n  hostElement: HTMLElement,\n  targetElement: HTMLElement,\n  placement: string,\n  appendToBody?: boolean,\n  options?: Options,\n  renderer?: Renderer2\n): void {\n\n  const data = positionService.positionElements(\n    hostElement,\n    targetElement,\n    placement,\n    appendToBody,\n    options\n  );\n\n  const offsets = getOffsets(data);\n\n  setStyles(targetElement, {\n    'will-change': 'transform',\n    top: '0px',\n    left: '0px',\n    transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n  }, renderer);\n\n  if (data.instance.arrow) {\n    setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n  }\n\n  updateContainerClass(data, renderer);\n}\n","import {\n  computeAutoPlacement,\n  getReferenceOffsets,\n  getTargetOffsets\n} from '../utils';\n\nimport { Data, Options } from '../models';\n\nexport function initData(\n  targetElement: HTMLElement, hostElement: HTMLElement, position: string, options: Options\n): Data {\n\n  const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n\n  if (!position.match(/^(auto)*\\s*(left|right|top|bottom)*$/)\n    && !position.match(/^(left|right|top|bottom)*(?: (left|right|top|bottom))?\\s*(start|end)*$/)) {\n      /* tslint:disable-next-line: no-parameter-reassignment */\n      position = 'auto';\n    }\n\n  const placementAuto = !!position.match(/auto/g);\n\n  // support old placements 'auto left|right|top|bottom'\n  let placement = position.match(/auto\\s(left|right|top|bottom)/)\n    ? position.split(' ')[1] || 'auto'\n    : position;\n\n  // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n  const matches = placement.match(/^(left|right|top|bottom)* ?(?!\\1)(left|right|top|bottom)?/);\n  if (matches) {\n    placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n  }\n\n  // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n  if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n    placement = 'auto';\n  }\n\n  const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n\n  placement = computeAutoPlacement(\n    placement,\n    hostElPosition,\n    targetElement,\n    hostElement,\n    options ? options.allowedPositions : undefined\n  );\n\n  return {\n    options,\n    instance: {\n      target: targetElement,\n      host: hostElement,\n      arrow: null\n    },\n    offsets: {\n      target: targetOffset,\n      host: hostElPosition,\n      arrow: null\n    },\n    positionFixed: false,\n    placement,\n    placementAuto\n  };\n}\n","import { Data, Offsets } from '../models';\n\nexport function getOffsets(data: Data): Offsets {\n  return {\n    width: data.offsets.target.width,\n    height: data.offsets.target.height,\n    left: Math.floor(data.offsets.target.left),\n    top: Math.round(data.offsets.target.top),\n    bottom: Math.round(data.offsets.target.bottom),\n    right: Math.floor(data.offsets.target.right)\n  };\n}\n","/**\n * Update class for the given popper\n */\nimport { Renderer2 } from '@angular/core';\nimport { Data } from '../models';\n\nexport function updateContainerClass(data: Data, renderer?: Renderer2): void {\n  const target = data.instance.target;\n\n  let containerClass = target.className;\n\n  if (data.placementAuto) {\n    containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\n    containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\n    containerClass = containerClass.replace(/\\sauto/g, ` ${data.placement}`);\n\n    if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n      containerClass += ' popover-auto';\n    }\n\n    if (containerClass.indexOf('tooltip') !== -1  && containerClass.indexOf('tooltip-auto') === -1) {\n      containerClass += ' tooltip-auto';\n    }\n  }\n\n  containerClass = containerClass.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\n\n  if (renderer) {\n    renderer.setAttribute(target, 'class', containerClass);\n\n    return;\n  }\n\n  target.className = containerClass;\n}\n","import { Injectable, ElementRef, RendererFactory2, Inject, PLATFORM_ID, NgZone } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { positionElements } from './ng-positioning';\n\nimport { fromEvent, merge, of, animationFrameScheduler, Subject, Observable } from 'rxjs';\nimport { Options } from './models';\n\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\n@Injectable()\nexport class PositioningService {\n  private options: Options;\n  private update$$ = new Subject<null>();\n  private positionElements = new Map();\n  private triggerEvent$: Observable<number|Event>;\n  private isDisabled = false;\n\n  constructor(\n    ngZone: NgZone,\n    rendererFactory: RendererFactory2,\n    @Inject(PLATFORM_ID) platformId: number\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n      ngZone.runOutsideAngular(() => {\n        this.triggerEvent$ = merge(\n          fromEvent(window, 'scroll', { passive: true }),\n          fromEvent(window, 'resize', { passive: true }),\n          /* tslint:disable-next-line: deprecation */\n          of(0, animationFrameScheduler),\n          this.update$$\n        );\n\n        this.triggerEvent$.subscribe(() => {\n          if (this.isDisabled) {\n            return;\n          }\n\n          this.positionElements\n          /* tslint:disable-next-line: no-any */\n            .forEach((positionElement: any) => {\n              positionElements(\n                _getHtmlElement(positionElement.target),\n                _getHtmlElement(positionElement.element),\n                positionElement.attachment,\n                positionElement.appendToBody,\n                this.options,\n                rendererFactory.createRenderer(null, null)\n              );\n            });\n        });\n      });\n    }\n  }\n\n  position(options: PositioningOptions): void {\n    this.addPositionElement(options);\n  }\n\n  get event$(): Observable<number|Event> {\n    return this.triggerEvent$;\n  }\n\n  disable(): void {\n    this.isDisabled = true;\n  }\n\n  enable(): void {\n    this.isDisabled = false;\n  }\n\n  addPositionElement(options: PositioningOptions): void {\n    this.positionElements.set(_getHtmlElement(options.element), options);\n  }\n\n  calcPosition(): void {\n    this.update$$.next();\n  }\n\n  deletePositionElement(elRef: ElementRef): void {\n    this.positionElements.delete(_getHtmlElement(elRef));\n  }\n\n  setOptions(options: Options) {\n    this.options = options;\n  }\n}\n\nfunction _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element;\n}\n"],"sourceRoot":""}