{"version":3,"sources":["webpack:///ng://ngx-bootstrap/modal/bs-modal-ref.service.ts","webpack:///ng://ngx-bootstrap/modal/modal-options.class.ts","webpack:///ng://ngx-bootstrap/modal/modal-container.component.ts","webpack:///ng://ngx-bootstrap/modal/modal-backdrop.component.ts","webpack:///ng://ngx-bootstrap/modal/modal.directive.ts","webpack:///ng://ngx-bootstrap/modal/bs-modal.service.ts","webpack:///ng://ngx-bootstrap/modal/modal.module.ts"],"names":["hide","Function","setClass","modalConfigDefaults","backdrop","keyboard","focus","show","ignoreBackdropClick","class","animated","initialState","MODAL_CONFIG_DEFAULT_OVERRIDE","CLASS_NAME","TRANSITION_DURATIONS","DISMISS_REASONS","options","_element","_renderer","isShown","isModalHiding","clickStartedInContent","this","config","Object","assign","ngOnInit","isAnimated","addClass","nativeElement","setStyle","setTimeout","document","body","bsModalService","getModalsCount","checkScrollbar","setScrollbar","onClickStarted","event","target","onClickStop","clickedInBackdrop","setDismissReason","onPopState","onEsc","keyCode","key","preventDefault","level","ngOnDestroy","removeClass","id","selector","template","host","role","tabindex","ModalOptions","element","renderer","_isShown","_isAnimated","value","reflow","_viewContainerRef","clf","modalDefaultOption","onShow","onShown","onHide","onHidden","isBodyOverflowing","originalBodyPadding","scrollbarWidth","timerHideModal","timerRmBackDrop","isNested","_backdrop","createLoader","_config","conf","getConfig","dismissReason","hideModal","dispose","toggle","emit","clearTimeout","classList","contains","showBackdrop","showElement","window","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","setAttribute","setProperty","transitionComplete","resetScrollbar","resetAdjustments","focusOtherModal","callback","instance","callbackRemove","removeBackdrop","attach","ModalBackdropComponent","to","_componentRef","parentElement","otherOpenedModals","querySelectorAll","length","clientWidth","innerWidth","getScrollbarWidth","parseInt","getComputedStyle","getPropertyValue","style","paddingRight","scrollDiv","createElement","offsetWidth","removeChild","exportAs","rendererFactory","modalsCount","lastDismissReason","loaders","_backdropLoader","createRenderer","content","_createLoaders","Date","getUTCMilliseconds","_showBackdrop","_showModal","_hideBackdrop","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","duration","modalLoader","providers","provider","provide","bsModalRef","BsModalRef","modalContainerRef","useValue","ModalContainerComponent","newClass","copyEvent","onBeforeHide","getInnerComponent","indexToRemove","findIndex","loader","forEach","reason","onBeforeShow","push","splice","i","from","subscribe","data","forRoot","ngModule","ModalModule","BsModalService","forChild","declarations","ModalDirective","exports","entryComponents"],"mappings":"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","file":"rca-runtime-widget-vendors~ef14712e.b14701839dffdce75a31.js","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable()\n// tslint:disable-next-line:no-any\nexport class BsModalRef<T = any> {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   */\n  id: number;\n\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n  content?: T | null;\n\n  /**\n   * Hides the modal\n   */\n  hide: () => void = Function;\n  /**\n   * Sets new class to modal window\n   */\n  setClass: (newClass: string) => void = Function;\n  /**\n   * Event that is fired when the modal behind the ref starts hiding\n   */\n  // tslint:disable-next-line:no-any\n  onHide: EventEmitter<any>;\n  /**\n   * Event that is fired when the modal behind the ref finishes hiding\n   */\n  // tslint:disable-next-line:no-any\n  onHidden: EventEmitter<any>;\n}\n","import { Injectable, StaticProvider, InjectionToken } from '@angular/core';\nimport { ClassName, DismissReasons, Selector, TransitionDurations } from './models';\n\n@Injectable()\nexport class ModalOptions<T = Object> {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   */\n  id?: number;\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean;\n\n  focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n  show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n  ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n  class?: string;\n  /**\n   * Toggle animation\n   */\n  animated?: boolean;\n  /**\n   * Modal data\n   */\n  initialState?: Partial<T>;\n  /**\n   * Modal providers\n   */\n  providers?: StaticProvider[];\n  /**\n   * aria-labelledby attribute value to set on the modal window\n   */\n  ariaLabelledBy?: string;\n  /**\n   * aria-describedby attribute value to set on the modal window\n   */\n  ariaDescribedby?: string;\n}\n\nexport const modalConfigDefaults: ModalOptions = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {}\n};\n\nexport const MODAL_CONFIG_DEFAULT_OVERRIDE: InjectionToken<ModalOptions> =\n  new InjectionToken<ModalOptions>('override-default-config');\n\nexport const CLASS_NAME: ClassName = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in', // bs3\n  SHOW: 'show' // bs4\n};\n\nexport const SELECTOR: Selector = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n\nexport const TRANSITION_DURATIONS: TransitionDurations = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n\nexport const DISMISS_REASONS: DismissReasons = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc',\n  BACK: 'browser-back-navigation-clicked'\n};\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport {\n  CLASS_NAME,\n  DISMISS_REASONS,\n  ModalOptions,\n  TRANSITION_DURATIONS\n} from './modal-options.class';\nimport { BsModalService } from './bs-modal.service';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'modal-container',\n  template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'modal',\n    role: 'dialog',\n    tabindex: '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n    '[attr.aria-describedby]': 'config.ariaDescribedby'\n  }\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n  config: ModalOptions;\n  isShown = false;\n  level: number;\n  isAnimated: boolean;\n  bsModalService: BsModalService;\n  private isModalHiding = false;\n  private clickStartedInContent = false;\n\n  constructor(options: ModalOptions,\n              protected _element: ElementRef,\n              private _renderer: Renderer2) {\n    this.config = Object.assign({}, options);\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this._renderer.addClass(\n        this._element.nativeElement,\n        CLASS_NAME.FADE\n      );\n    }\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    setTimeout(() => {\n      this.isShown = true;\n      this._renderer.addClass(\n        this._element.nativeElement,\n        isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n      );\n    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.bsModalService.getModalsCount() === 1) {\n        this.bsModalService.checkScrollbar();\n        this.bsModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n    }\n    if (this._element.nativeElement) {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onClickStarted(event: MouseEvent): void {\n    this.clickStartedInContent = event.target !== this._element.nativeElement;\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onClickStop(event: MouseEvent): void {\n    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      !clickedInBackdrop\n    ) {\n      this.clickStartedInContent = false;\n\n      return;\n    }\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n\n  @HostListener('window:popstate')\n  onPopState(): void {\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACK);\n    this.hide();\n  }\n\n  @HostListener('window:keydown.esc', ['$event'])\n  onEsc(event: KeyboardEvent): void {\n    if (!this.isShown) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n\n    if (\n      this.config.keyboard &&\n      this.level === this.bsModalService.getModalsCount()\n    ) {\n      this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n\n  hide(): void {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(\n      this._element.nativeElement,\n      isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n    );\n    setTimeout(() => {\n      this.isShown = false;\n      if (\n        document &&\n        document.body &&\n        this.bsModalService.getModalsCount() === 1\n      ) {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n      }\n      this.bsModalService.hide(this.config.id);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n  }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { CLASS_NAME } from './modal-options.class';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\n\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'bs-modal-backdrop',\n  template: ' ',\n  host: { class: CLASS_NAME.BACKDROP }\n})\nexport class ModalBackdropComponent implements OnInit {\n  get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  set isAnimated(value: boolean) {\n    this._isAnimated = value;\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n  }\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    } else {\n      this.renderer.removeClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    }\n    if (!isBs3()) {\n      if (value) {\n        this.renderer.addClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      } else {\n        this.renderer.removeClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      }\n    }\n  }\n\n  element: ElementRef;\n  renderer: Renderer2;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.FADE}`\n      );\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n","/* tslint:disable:max-file-line-count */\n// todo: should we support enforce focus in?\n// todo: in original bs there are was a way to prevent modal from showing\n// todo: original modal had resize events\n\nimport {\n  ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Input,\n  OnDestroy, OnInit, Output, Renderer2, ViewContainerRef, Optional, Inject\n} from '@angular/core';\n\nimport { document, window, isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport {\n  CLASS_NAME, DISMISS_REASONS, modalConfigDefaults, ModalOptions, MODAL_CONFIG_DEFAULT_OVERRIDE\n} from './modal-options.class';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n\n/** Mark any code with directive to show it's content in modal */\n@Directive({\n  selector: '[bsModal]',\n  exportAs: 'bs-modal'\n})\nexport class ModalDirective implements OnDestroy, OnInit {\n  /** allows to set modal configuration via element property */\n  @Input()\n  set config(conf: ModalOptions) {\n    this._config = this.getConfig(conf);\n  }\n\n  get config(): ModalOptions {\n    return this._config;\n  }\n\n  /** This event fires immediately when the `show` instance method is called. */\n  @Output()\n  onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has been made visible to the user\n   * (will wait for CSS transitions to complete)\n   */\n  @Output()\n  onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired immediately when\n   * the hide instance method has been called.\n   */\n  @Output()\n  onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has finished being\n   * hidden from the user (will wait for CSS transitions to complete).\n   */\n  @Output()\n  onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n\n  /** This field contains last dismiss reason.\n   * Possible values: `backdrop-click`, `esc` and `id: number`\n   * (if modal was closed by direct call of `.hide()`).\n   */\n  dismissReason: string;\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  protected _config: ModalOptions;\n  protected _isShown = false;\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n  protected scrollbarWidth = 0;\n\n  protected timerHideModal = 0;\n  protected timerRmBackDrop = 0;\n\n  // reference to backdrop component\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\n\n  private isNested = false;\n  private clickStartedInContent = false;\n\n  constructor(\n    private _element: ElementRef,\n    _viewContainerRef: ViewContainerRef,\n    private _renderer: Renderer2,\n    clf: ComponentLoaderFactory,\n    @Optional() @Inject(MODAL_CONFIG_DEFAULT_OVERRIDE) modalDefaultOption: ModalOptions) {\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(\n      _element,\n      _viewContainerRef,\n      _renderer\n    );\n    this._config = modalDefaultOption || modalConfigDefaults;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onClickStarted(event: MouseEvent): void {\n    this.clickStartedInContent = event.target !== this._element.nativeElement;\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onClickStop(event: MouseEvent): void {\n    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      !clickedInBackdrop\n    ) {\n      this.clickStartedInContent = false;\n\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n\n  // todo: consider preventing default and stopping propagation\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(event: KeyboardEvent): void {\n    if (!this._isShown) {\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n\n  ngOnDestroy() {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n\n  ngOnInit(): void {\n    this._config = this._config || this.getConfig();\n    setTimeout(() => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n\n  /* Public methods */\n\n  /** Allows to manually toggle modal visibility */\n  toggle(): void {\n    return this._isShown ? this.hide() : this.show();\n  }\n\n  /** Allows to manually open modal */\n  show(): void {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = true;\n\n    this.checkScrollbar();\n    this.setScrollbar();\n\n    if (document && document.body) {\n      if (document.body.classList.contains(CLASS_NAME.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n      }\n    }\n\n    this.showBackdrop(() => {\n      this.showElement();\n    });\n  }\n\n  /** Allows to manually close modal */\n  hide(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onHide.emit(this);\n\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n\n    window.clearTimeout(this.timerHideModal);\n    window.clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n    // this._addClassIn = false;\n\n    if (this._config.animated) {\n      this.timerHideModal = window.setTimeout(\n        () => this.hideModal(),\n        TRANSITION_DURATION\n      );\n    } else {\n      this.hideModal();\n    }\n  }\n\n  /** Private methods @internal */\n  protected getConfig(config?: ModalOptions): ModalOptions {\n    return Object.assign({}, this._config, config);\n  }\n\n  /**\n   *  Show dialog\n   *  @internal\n   */\n  protected showElement(): void {\n    // todo: replace this with component loader usage\n    if (\n      !this._element.nativeElement.parentNode ||\n      this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE\n    ) {\n      // don't move modals dom position\n      if (document && document.body) {\n        document.body.appendChild(this._element.nativeElement);\n      }\n    }\n\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'false'\n    );\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-modal',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    this._renderer.setProperty(\n      this._element.nativeElement,\n      'scrollTop',\n      0\n    );\n\n    if (this._config.animated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n\n    // this._addClassIn = true;\n    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n    };\n\n    if (this._config.animated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n\n  /** @internal */\n  protected hideModal(): void {\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'none'\n    );\n    this.showBackdrop(() => {\n      if (!this.isNested) {\n        if (document && document.body) {\n          this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n    });\n  }\n\n  // todo: original show was calling a callback when done, but we can use\n  // promise\n  /** @internal */\n  protected showBackdrop(callback?: Function): void {\n    if (\n      this._isShown &&\n      this.config.backdrop &&\n      (!this.backdrop || !this.backdrop.instance.isShown)\n    ) {\n      this.removeBackdrop();\n      this._backdrop\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({ isAnimated: this._config.animated });\n      this.backdrop = this._backdrop._componentRef;\n\n      if (!callback) {\n        return;\n      }\n\n      if (!this._config.animated) {\n        callback();\n\n        return;\n      }\n\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n\n      const callbackRemove = () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = window.setTimeout(\n          callbackRemove,\n          BACKDROP_TRANSITION_DURATION\n        );\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  /** @internal */\n  protected removeBackdrop(): void {\n    this._backdrop.hide();\n  }\n\n  /** Events tricks */\n\n  // no need for it\n  // protected setEscapeEvent():void {\n  //   if (this._isShown && this._config.keyboard) {\n  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n  //       if (event.which === 27) {\n  //         this.hide()\n  //       }\n  //     })\n  //\n  //   } else if (!this._isShown) {\n  //     $(this._element).off(Event.KEYDOWN_DISMISS)\n  //   }\n  // }\n\n  // protected setResizeEvent():void {\n  // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n  // if (this._isShown) {\n  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n  // } else {\n  //   $(window).off(Event.RESIZE)\n  // }\n  // }\n\n  protected focusOtherModal() {\n    if (this._element.nativeElement.parentElement == null) {\n      return;\n    }\n    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n    if (!otherOpenedModals.length) {\n      return;\n    }\n    otherOpenedModals[otherOpenedModals.length - 1].focus();\n  }\n\n  /** @internal */\n  protected resetAdjustments(): void {\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingLeft',\n      ''\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingRight',\n      ''\n    );\n  }\n\n  /** Scroll bar tricks */\n  /** @internal */\n  protected checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  protected setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || 0,\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n        this.scrollbarWidth}px`;\n    }\n  }\n\n  protected resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  protected getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n}\n","import {\n  ComponentRef,\n  Injectable,\n  TemplateRef,\n  EventEmitter,\n  Renderer2,\n  RendererFactory2,\n  Inject,\n  Optional\n} from '@angular/core';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalContainerComponent } from './modal-container.component';\nimport {\n  CLASS_NAME,\n  modalConfigDefaults,\n  ModalOptions,\n  TRANSITION_DURATIONS,\n  MODAL_CONFIG_DEFAULT_OVERRIDE\n} from './modal-options.class';\nimport { BsModalRef } from './bs-modal-ref.service';\n\n@Injectable()\nexport class BsModalService {\n  // constructor props\n  config: ModalOptions;\n\n  // tslint:disable-next-line:no-any\n  onShow: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onShown: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onHide: EventEmitter<any> = new EventEmitter();\n  // tslint:disable-next-line:no-any\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n\n  protected scrollbarWidth = 0;\n\n  protected backdropRef: ComponentRef<ModalBackdropComponent>;\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\n  private modalsCount = 0;\n  private lastDismissReason: any = null;\n\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\n\n  private _renderer: Renderer2;\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    private clf: ComponentLoaderFactory,\n    @Optional() @Inject(MODAL_CONFIG_DEFAULT_OVERRIDE) private modalDefaultOption: ModalOptions) {\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\n      null,\n      null,\n      null\n    );\n    this._renderer = rendererFactory.createRenderer(null, null);\n    this.config = modalDefaultOption ?\n      (Object.assign({}, modalConfigDefaults, modalDefaultOption)) :\n      modalConfigDefaults;\n  }\n\n  /** Shows a modal */\n  show<T = Object>(\n    // tslint:disable-next-line:no-any\n    content: string | TemplateRef<any> | { new(...args: any[]): T },\n    config?: ModalOptions<T>\n  ): BsModalRef<T> {\n    this.modalsCount++;\n    this._createLoaders();\n\n    const id = config?.id || (new Date()).getUTCMilliseconds(); // must be different per every show() call\n    this.config = this.modalDefaultOption ?\n      Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) :\n      Object.assign({}, modalConfigDefaults, config);\n    this.config.id = id;\n\n    this._showBackdrop();\n    this.lastDismissReason = null;\n\n    return this._showModal(content);\n  }\n\n  hide(id?: number) {\n    if (this.modalsCount === 1 || id == null) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\n    setTimeout(() => {\n      this._hideModal(id);\n      this.removeLoaders(id);\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n  }\n\n  _showBackdrop(): void {\n    const isBackdropEnabled =\n      this.config.backdrop || this.config.backdrop === 'static';\n    const isBackdropInDOM =\n      !this.backdropRef || !this.backdropRef.instance.isShown;\n\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader\n          .attach(ModalBackdropComponent)\n          .to('body')\n          .show({ isAnimated: this.config.animated });\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n\n  _hideBackdrop(): void {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n    setTimeout(() => this.removeBackdrop(), duration);\n  }\n  // tslint:disable-next-line:no-any\n  _showModal(content: any): BsModalRef {\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    if (this.config && this.config.providers) {\n      for (const provider of this.config.providers) {\n        modalLoader.provide(provider);\n      }\n    }\n\n    const bsModalRef = new BsModalRef();\n    const modalContainerRef = modalLoader\n      .provide({ provide: ModalOptions, useValue: this.config })\n      .provide({ provide: BsModalRef, useValue: bsModalRef })\n      .attach(ModalContainerComponent)\n      .to('body');\n    bsModalRef.hide = () => modalContainerRef.instance.hide();\n    bsModalRef.setClass = (newClass: string) => {\n      modalContainerRef.instance.config.class = newClass;\n    };\n\n    bsModalRef.onHidden = new EventEmitter<any>();\n    bsModalRef.onHide = new EventEmitter<any>();\n\n    this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\n    this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);\n    // call 'show' method after assign setClass in bsModalRef.\n    // it makes modal component's bsModalRef available to call setClass method\n    modalContainerRef.show({\n      content,\n      isAnimated: this.config.animated,\n      initialState: this.config.initialState,\n      bsModalService: this,\n      id: this.config.id\n    });\n    modalContainerRef.instance.level = this.getModalsCount();\n\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\n    bsModalRef.id = modalContainerRef.instance.config?.id;\n\n    return bsModalRef;\n  }\n\n  _hideModal(id?: number): void {\n    if (id != null) {\n      const indexToRemove = this.loaders.findIndex(loader => loader.instance.config.id === id);\n      const modalLoader = this.loaders[indexToRemove];\n      if (modalLoader) {\n        modalLoader.hide(id);\n      }\n    } else {\n      this.loaders.forEach(\n        (loader: ComponentLoader<ModalContainerComponent>) => {\n          loader.hide(loader.instance.config.id);\n        }\n      );\n    }\n  }\n\n  getModalsCount(): number {\n    return this.modalsCount;\n  }\n\n  setDismissReason(reason: string) {\n    this.lastDismissReason = reason;\n  }\n\n  removeBackdrop(): void {\n    this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n\n  /** Checks if the body is overflowing and sets scrollbar width */\n  /** @internal */\n  checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || '0',\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n        this.scrollbarWidth}px`;\n    }\n  }\n\n  private resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  private getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n\n  private _createLoaders(): void {\n    const loader = this.clf.createLoader<ModalContainerComponent>(\n      null,\n      null,\n      null\n    );\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n\n  private removeLoaders(id?: number): void {\n    if (id != null) {\n      const indexToRemove = this.loaders.findIndex(loader => loader.instance.config.id === id);\n      if (indexToRemove >= 0) {\n        this.loaders.splice(indexToRemove, 1);\n        this.loaders.forEach(\n          (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\n            loader.instance.level = i + 1;\n          }\n        );\n      }\n    } else {\n      this.loaders.splice(0, this.loaders.length);\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\n    from.subscribe((data: any) => {\n      to.emit(this.lastDismissReason || data);\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalDirective } from './modal.directive';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { ModalContainerComponent } from './modal-container.component';\nimport { BsModalService } from './bs-modal.service';\n\n@NgModule({\n  declarations: [\n    ModalBackdropComponent,\n    ModalDirective,\n    ModalContainerComponent\n  ],\n  exports: [ModalBackdropComponent, ModalDirective],\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n})\nexport class ModalModule {\n  static forRoot(): ModuleWithProviders<ModalModule> {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n  static forChild(): ModuleWithProviders<ModalModule> {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"],"sourceRoot":""}